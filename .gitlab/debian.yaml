.runtimebuild:
  stage: build
  script:
  - |
    set -e
    [ -z "${SLIM}" ] && export FAT="_fat"
    [ "${dev}" == "dn" ] && export NODE_ENV="production" || export NODE_ENV="test"
    [ "${DEBIAN_VERSION}" == "buster" ] && _suffix="_buster"
    set | grep -E "BUILDER_IMG=|NODE_VERSION=|buildarch=|FAT=|DEBIAN_VERSION=|ADD_TAG="
    build --context "./build" \
      --dockerfile "Dockerfile-debian" \
      --destination "${CI_REGISTRY_IMAGE}:${CI_COMMIT_BRANCH}${_suffix}${FAT}_${ADD_TAG}" \
      --build-arg NODE_VERSION="${NODE_VERSION}" \
      --build-arg DEBIAN_VERSION="${DEBIAN_VERSION}" \
      --build-arg GIT_INFO="${GIT_INFO}" \
      --build-arg buildarch="${buildarch}" \
      --build-arg BUILDER_IMG="${BUILDER_IMG}" \
      --build-arg SLIM="${SLIM}" \
      --build-arg opt="${opt}" \
      --build-arg CONTAINER_PCK_REG_TOKEN="${CONTAINER_PCK_REG_TOKEN}" \
      --build-arg NODE_ENV="${NODE_ENV}"
  extends: 
  - .beforescript

.runtime:
  extends:
  - .runtimebuild
  - .rule

build_amd64:
  variables:
    imgkey: "amd64-on-dn"
    SLIM: "-slim"
    ADD_TAG: "amd64"
  needs: ["bld_art: [amd64-on-dn]"]
  extends: .runtime
  environment:
    name: "$CI_COMMIT_BRANCH/Build amd64"

build_amd64_fat:
  variables:
    imgkey: "amd64-oy-dn"
    ADD_TAG: "amd64"
  needs: ["bld_art: [amd64-oy-dn]"]
  extends: .runtime
  environment:
    name: "$CI_COMMIT_BRANCH/Build amd64 fat"

build_arm:
  variables:
    imgkey: "arm-oy-dn"
    SLIM: "-slim"
    ADD_TAG: "arm"
  needs: ["bld_art: [arm-oy-dn]"]
  extends: .runtime
  environment:
    name: "$CI_COMMIT_BRANCH/Build arm"

build_arm_fat:
  variables:
    imgkey: "arm-oy-dn"
    ADD_TAG: "arm"
  needs: ["bld_art: [arm-oy-dn]"]
  extends: .runtime
  environment:
    name: "$CI_COMMIT_BRANCH/Build arm fat"

build_arm_buster:
  variables:
    imgkey: "arm-oy-dn"
    SLIM: "-slim"
    ADD_TAG: "arm"
    DEBIAN_VERSION: "buster"
    # Node > v19 not supported in buster:
    NODE_VERSION: "18"
  needs: ["bld_art: [arm-oy-dn]"]
  extends: .runtime
  environment:
    name: "$CI_COMMIT_BRANCH/Build arm buster"

build_arm_buster_fat:
  variables:
    imgkey: "arm-oy-dn"
    ADD_TAG: "arm"
    DEBIAN_VERSION: "buster"
    # Node > v19 not supported in buster:
    NODE_VERSION: "18"
  needs: ["bld_art: [arm-oy-dn]"]
  extends: .runtime
  environment:
    name: "$CI_COMMIT_BRANCH/Build arm buster fat"

build_arm64:
  variables:
    imgkey: "arm64-oy-dn"
    SLIM: "-slim"
    ADD_TAG: "arm64"
  needs: ["bld_art: [arm64-oy-dn]"]
  extends: .runtime
  environment:
    name: "$CI_COMMIT_BRANCH/Build arm64"

build_arm64_fat:
  variables:
    imgkey: "arm64-oy-dn"
  needs: ["bld_art: [arm64-oy-dn]"]
  extends: .runtime
  environment:
    name: "$CI_COMMIT_BRANCH/Build arm64 fat"

.build_debug:
  variables:
    SLIM: "-slim"
    imgkey: "amd64-oy-dy"
  needs: ["bld_art: [amd64-oy-dy]"]
  extends:
  - .runtimebuild
  - .rulenomaster
  environment:
    name: "$CI_COMMIT_BRANCH/Build Debug"

build_debug21:
  variables:
    ADD_TAG: "debug21"
    NODE_VERSION: "21"
  extends:
  - .build_debug

build_debug20:
  variables:
    ADD_TAG: "debug20"
    NODE_VERSION: "20"
  extends:
  - .build_debug

sync_slim:
  image: ${TOOLBOX_IMG}
  needs:
  - build_amd64
  - build_arm64
  - build_arm
  stage: build
  script:
  - |
    set -e
    set | grep -E "CI_COMMIT_BRANCH=|CI_REGISTRY_IMAGE=|MAGICMIRROR_VERSION="
    docker.gitlab.login
    if [ "${CI_COMMIT_BRANCH}" = "master" ]; then
      docker.manifest "${CI_REGISTRY_IMAGE}:${CI_COMMIT_BRANCH}" "latest"
      docker.manifest "${CI_REGISTRY_IMAGE}:${CI_COMMIT_BRANCH}" "${MAGICMIRROR_VERSION}"
      docker.sync "${CI_REGISTRY_IMAGE}:latest ${CI_REGISTRY_IMAGE}:${MAGICMIRROR_VERSION}"
    else
      docker.manifest "${CI_REGISTRY_IMAGE}:${CI_COMMIT_BRANCH}" "${CI_COMMIT_BRANCH}"
      docker.sync "${CI_REGISTRY_IMAGE}:${CI_COMMIT_BRANCH}"
    fi
  after_script:
    - docker.logout
  extends: 
  - .rule
  environment:
    name: "$CI_COMMIT_BRANCH/Docker Sync Debian"
    url: https://hub.docker.com/r/karsten13/magicmirror/tags

sync_fat:
  image: ${TOOLBOX_IMG}
  needs:
  - build_amd64_fat
  - build_arm64_fat
  - build_arm_fat
  stage: build
  script:
  - |
    set -e
    set | grep -E "CI_COMMIT_BRANCH=|CI_REGISTRY_IMAGE=|MAGICMIRROR_VERSION="
    docker.gitlab.login
    if [ "${CI_COMMIT_BRANCH}" = "master" ]; then
      docker.manifest "${CI_REGISTRY_IMAGE}:${CI_COMMIT_BRANCH}_fat" "fat"
      docker.manifest "${CI_REGISTRY_IMAGE}:${CI_COMMIT_BRANCH}_fat" "${MAGICMIRROR_VERSION}_fat"
      docker.sync "${CI_REGISTRY_IMAGE}:fat ${CI_REGISTRY_IMAGE}:${MAGICMIRROR_VERSION}_fat"
    else
      docker.manifest "${CI_REGISTRY_IMAGE}:${CI_COMMIT_BRANCH}_fat" "${CI_COMMIT_BRANCH}_fat"
      docker.sync "${CI_REGISTRY_IMAGE}:${CI_COMMIT_BRANCH}_fat"
    fi
  after_script:
    - docker.logout
  extends: 
  - .rule
  environment:
    name: "$CI_COMMIT_BRANCH/Docker Sync Debian Fat"
    url: https://hub.docker.com/r/karsten13/magicmirror/tags

sync_buster:
  needs: 
  - build_arm_buster
  - build_arm_buster_fat
  image: ${TOOLBOX_IMG}
  stage: build
  script:
  - |
    set -e
    crane auth login "registry.gitlab.com" -u "${CI_REGISTRY_USER}" -p "${CI_REGISTRY_PASSWORD}"
    crane auth login "docker.io" -u "${DOCKER_USER}" -p "${DOCKER_PASS}"
    [ "${CI_COMMIT_BRANCH}" = "master" ] || _suffix="${CI_COMMIT_BRANCH}_"
    crane copy "${CI_REGISTRY_IMAGE}:${CI_COMMIT_BRANCH}_buster_fat_arm" "${DOCKER_USER}/magicmirror:${_suffix}buster_fat"
    crane copy "${CI_REGISTRY_IMAGE}:${CI_COMMIT_BRANCH}_buster_arm" "${DOCKER_USER}/magicmirror:${_suffix}buster"
  extends: 
  - .rule
  environment:
    name: "$CI_COMMIT_BRANCH/Docker Sync Buster"
    url: https://hub.docker.com/r/karsten13/magicmirror/tags
